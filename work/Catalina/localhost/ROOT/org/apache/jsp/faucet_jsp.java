/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.40
 * Generated at: 2019-04-19 08:12:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class faucet_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/home/fouri/work/nodehome-project/nodehome-launcher/webapps/ROOT/WEB-INF/lib/spring-webmvc-4.1.2.RELEASE.jar!/META-INF/spring.tld", Long.valueOf(1415631592000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-webmvc-4.1.2.RELEASE.jar", Long.valueOf(1555659349000L));
    _jspx_dependants.put("jar:file:/home/fouri/work/nodehome-project/nodehome-launcher/webapps/ROOT/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1555659349000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\" />\r\n");
      out.write("    <title></title>\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"/>\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css?family=Baloo+Tammudu\" rel=\"stylesheet\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\"/>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/css/style.css\"/>\r\n");
      out.write("    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\r\n");
      out.write("    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\r\n");
      out.write("    <script src=\"/js/loader.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/css/jquery-confirm.min.css\">\r\n");
      out.write("\t<script src=\"/js/jquery-confirm.min.js\"></script>\r\n");
      out.write("\t\r\n");
      out.write("\t<script src=\"/js/tapp_interface.js\"></script>\r\n");
      out.write("\t\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t//Web에서 로딩되자 마자 실행하는 스크립트\r\n");
      out.write("\t\t$(function() {\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t// Function to call as soon as it is loaded from the App\r\n");
      out.write("\t\tfunction AWI_OnLoadFromApp(dtype) {\r\n");
      out.write("\t\t\t// Activate AWI_XXX method\r\n");
      out.write("\t\t\tAWI_ENABLE = true;\r\n");
      out.write("\t\t    AWI_DEVICE = dtype;\r\n");
      out.write("\t\t    \r\n");
      out.write("\t\t    j_curWID = AWI_getAccountConfig(\"CUR_WID\");\r\n");
      out.write("\t\t    $('#walletName2').val(j_curWID);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t// 전송\r\n");
      out.write("\t\tfunction FnTransferCoin() {\r\n");
      out.write("\r\n");
      out.write("\t        var formData = $(\"#userWalletRimitFom\").serialize();\r\n");
      out.write("\t        $.ajax({\r\n");
      out.write("\t        \tasync:false,\r\n");
      out.write("\t            cache : false,\r\n");
      out.write("\t            url : \"/faucet_proc.do\",\r\n");
      out.write("\t            type : 'POST',\r\n");
      out.write("\t            data : formData,\r\n");
      out.write("\t            success : function(data) {\r\n");
      out.write("\t            \tvar res = JSON.parse(data);\r\n");
      out.write("\t            \tif(res['result']==\"OK\") {\r\n");
      out.write("\t\t    \t\t\t$.alert({\r\n");
      out.write("\t\t    \t\t\t\t    title: '안내',\r\n");
      out.write("\t\t    \t\t\t\t    content: \"10,000,000BON이 전송되었습니다.\",\r\n");
      out.write("\t\t    \t\t\t\t    confirm: function(){\r\n");
      out.write("\t\t    \t\t\t\t    },\r\n");
      out.write("\t\t    \t\t\t\t    onClose: function(){\r\n");
      out.write("\t\t    \t\t\t\t\t\tlocation.reload();\r\n");
      out.write("\t\t    \t\t\t\t    },\r\n");
      out.write("\t\t    \t\t\t});\r\n");
      out.write("\t            \t} else if(res['result']==\"NOTTODAY\") {\r\n");
      out.write("\t\t    \t\t\t$.alert({\r\n");
      out.write("\t\t    \t\t\t\t    title: '오류',\r\n");
      out.write("\t\t    \t\t\t\t    content: \"1일 1회만 전송 가능합니다.\",\r\n");
      out.write("\t\t    \t\t\t\t    confirm: function(){\r\n");
      out.write("\t\t    \t\t\t\t    },\r\n");
      out.write("\t\t    \t\t\t\t    onClose: function(){\r\n");
      out.write("\t\t    \t\t\t\t\t\tlocation.reload();\r\n");
      out.write("\t\t    \t\t\t\t    },\r\n");
      out.write("\t\t    \t\t\t});\r\n");
      out.write("\t            \t} else {\r\n");
      out.write("\t\t    \t\t\t$.alert({\r\n");
      out.write("\t    \t\t\t\t    title: '오류',\r\n");
      out.write("\t    \t\t\t\t    content: \"전송중 오류가 발생했습니다.\",\r\n");
      out.write("\t    \t\t\t\t    confirm: function(){\r\n");
      out.write("\t    \t\t\t\t    },\r\n");
      out.write("\t    \t\t\t\t    onClose: function(){\r\n");
      out.write("\t    \t\t\t\t\t\tlocation.reload();\r\n");
      out.write("\t    \t\t\t\t    },\r\n");
      out.write("\t    \t\t\t\t});\r\n");
      out.write("\t            \t}\r\n");
      out.write("\t            },\r\n");
      out.write("\t            error : function(xhr, status) {\r\n");
      out.write("\t    \t\t\t$.alert({ \r\n");
      out.write("    \t\t\t\t    title: '에러',\r\n");
      out.write("    \t\t\t\t    content: \"전송중 오류가 발생했습니다.\",\r\n");
      out.write("    \t\t\t\t    confirm: function(){\r\n");
      out.write("    \t\t\t\t    },\r\n");
      out.write("    \t\t\t\t    onClose: function(){\r\n");
      out.write("    \t\t\t\t\t\tlocation.reload();\r\n");
      out.write("    \t\t\t\t    },\r\n");
      out.write("    \t\t\t\t});\r\n");
      out.write("\t            }\r\n");
      out.write("\t        });\t\r\n");
      out.write("\t\t}\r\n");
      out.write("    </script>\r\n");
      out.write("  \t</head>\r\n");
      out.write("  <body>\r\n");
      out.write("  \r\n");
      out.write("\t\t<nav class=\"navbar navbar-default navbar-fixed-top\">\r\n");
      out.write("\t\t  <div class=\"container\">\r\n");
      out.write("\t\t    <div class=\"navbar-header\">\r\n");
      out.write("\t\t        <span style=\"display:inline-block; width:100%; margin:0 auto; padding:10px 0px 0px 0px; text-align:center; vertical-align:middle; font-size:28px; font-family: 'Baloo Tammudu', cursive;background-color:#fff;\" onclick=\"javascript:location.href='/user/login.jsp'\">Nodehome Platform</span>\r\n");
      out.write("\t\t    </div>\r\n");
      out.write("\t\t  </div>\r\n");
      out.write("\t\t</nav>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<Br/>\r\n");
      out.write("\t\t<p style=\"height:50px;\">&nbsp;</p>\r\n");
      out.write("        <span style=\"font-size:24px; font-weight:bold;\">Faucet</span>\r\n");
      out.write("        <div style=\"width:100%; height:8px; text-align:center;\"></div> \r\n");
      out.write("        \r\n");
      out.write("\t\t<!-- Body : S -->\r\n");
      out.write("\t\t<form name=\"userWalletRimitFom\" id=\"userWalletRimitFom\" method=\"post\" action=\"/faucet_proc.do\" onsubmit=\"return false;\">\r\n");
      out.write("\t\t  <input type=\"hidden\" name=\"cnetwork\" value=\"debugnet\" />\r\n");
      out.write("\t\t  <div style=\"width:100%;border:1px solid #F5ECDC;border-radius: 5px;padding:10px 10px 25px 10px;background:#FFFCF7;word-wrap: break-word;\">\r\n");
      out.write("\t\t  \t<h4>NodeHome COIN Faucet </h4>\r\n");
      out.write("\t\t  \t\t<br/>\r\n");
      out.write("\t\t\t  <div class=\"form-group\">\r\n");
      out.write("\t\t\t    <label for=\"name\">User wallet</label>\r\n");
      out.write("\t\t\t    <input type=\"text\" class=\"form-control\" name=\"walletName2\" id=\"walletName2\" placeholder=\"Wallet ID\" value=\"\"/>\r\n");
      out.write("\t\t\t    <br/><br/>\r\n");
      out.write("\t\t\t    <button type=\"button\" class=\"btn btn-primary\" onclick=\"FnTransferCoin()\">request 10,000,000BON from faucet</button>\r\n");
      out.write("\t\t\t  </div>\r\n");
      out.write("\t\t  \r\n");
      out.write("\t\t  </div>\r\n");
      out.write("\t\t  \r\n");
      out.write("\t\t</form> \r\n");
      out.write("\t\t<!-- Body : E -->\r\n");
      out.write("\t\t\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("  </body>\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
