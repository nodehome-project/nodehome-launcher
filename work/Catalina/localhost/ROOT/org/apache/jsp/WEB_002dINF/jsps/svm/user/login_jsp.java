/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.40
 * Generated at: 2019-04-19 07:49:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsps.svm.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import io.nodehome.cmm.service.GlobalProperties;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/home/fouri/work/nodehome-project/nodehome-launcher/webapps/ROOT/WEB-INF/lib/spring-webmvc-4.1.2.RELEASE.jar!/META-INF/spring.tld", Long.valueOf(1415631592000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-webmvc-4.1.2.RELEASE.jar", Long.valueOf(1555659349000L));
    _jspx_dependants.put("jar:file:/home/fouri/work/nodehome-project/nodehome-launcher/webapps/ROOT/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1555659349000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("io.nodehome.cmm.service.GlobalProperties");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("    <title></title>\r\n");
      out.write("    <!-- Required meta tags -->\r\n");
      out.write("    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\" />\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width\">\r\n");
      out.write("    <!-- <meta content=\"width=device-width, initial-scale=1.0; maximum-scale=1.0; minimum-scale=1.0; user-scalable=no;\" name=\"viewport\" /> -->    \r\n");
      out.write("    \r\n");
      out.write("    <!-- bootstrap 3.3.7 -->\r\n");
      out.write("    <link href=\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\r\n");
      out.write("\t<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\r\n");
      out.write("    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>    \r\n");
      out.write("    <link href=\"/bootstrap/assets/css/material-login.css\" rel=\"stylesheet\">\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.4.2/css/all.css\" integrity=\"sha384-/rXc/GQVaYpyDdyxK+ecHPVYJSN9bmVFBvjA/9eOB+pb3F2w2N6fc5qB9Ew5yIns\" crossorigin=\"anonymous\">\r\n");
      out.write("    \r\n");
      out.write("    <!-- Platform JS -->   \r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"/css/jquery-confirm.min.css\">\r\n");
      out.write("\t<script src=\"/js/jquery-confirm.min.js\"></script>\r\n");
      out.write("    <script src=\"/js/tapp_interface.js\"></script>\r\n");
      out.write("\t<link href=\"/css/style.css\" rel=\"stylesheet\" />\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t// Script to run as soon as loaded from the web\r\n");
      out.write("\t\t$(function() {\r\n");
      out.write("\t\t\t$('#loginform').click(function(){\r\n");
      out.write("\t\t\t\tonMenu = false;\r\n");
      out.write("\t\t\t\t$('#menu-box').animate({ top : \"-300px\" }, 300);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tvar j_curANM;\r\n");
      out.write("\t\tvar j_curNetId;\r\n");
      out.write("\t\tvar j_isAbleTestNet;\r\n");
      out.write("\t\tvar j_isAbleDebugNet;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// Function to call as soon as it is loaded from the App\r\n");
      out.write("\t\tfunction AWI_OnLoadFromApp(dtype) {\r\n");
      out.write("\t\t\t // Activate AWI_XXX method\r\n");
      out.write("\t\t\t AWI_ENABLE = true;\r\n");
      out.write("\t         AWI_DEVICE = dtype;\r\n");
      out.write("\t \t\t AWI_setTerminatePath('/user/login');\r\n");
      out.write("\t \t\t\r\n");
      out.write("\t\t\t var chk = AWI_isCheckPassword();\r\n");
      out.write("\t\t\t var sReturn = AWI_isAbleFingerprint();\r\n");
      out.write("\t\t\t var sRes = JSON.parse(sReturn);\r\n");
      out.write("\t\t\t \r\n");
      out.write("\t\t\t j_isAbleTestNet = AWI_isAbleTestNet();\r\n");
      out.write("\t\t\t j_isAbleDebugNet = AWI_isAbleDebugNet();\r\n");
      out.write("\r\n");
      out.write("\t\t\t if(j_isAbleTestNet==\"OK\" || j_isAbleDebugNet==\"OK\") {\r\n");
      out.write("\t\t\t\t $('#netIdBtn').show();\r\n");
      out.write("\t\t\t }\r\n");
      out.write("\t\t\t if(j_isAbleTestNet==\"OK\") {\r\n");
      out.write("\t             var option = $(\"<option value='TestNet'>TestNet</option>\");\r\n");
      out.write("\t             $('#netId').append(option); \r\n");
      out.write("\t\t\t } \r\n");
      out.write("\t\t\t if(j_isAbleDebugNet==\"OK\") {\r\n");
      out.write("\t             var option = $(\"<option value='DebugNet'>DebugNet</option>\");\r\n");
      out.write("\t             $('#netId').append(option); \r\n");
      out.write("\t\t\t }\r\n");
      out.write("\r\n");
      out.write("\t\t\t j_curNetId = (AWI_getNetID())['value'];\r\n");
      out.write("\t\t\t $('#netId').val(j_curNetId);\r\n");
      out.write("\t\t\t if(j_curNetId!=\"MainNet\") $('#goHostBtn').show();\r\n");
      out.write("\r\n");
      out.write("\t\t\t AWI_setAppTitle(\"TApp\");\r\n");
      out.write("\r\n");
      out.write("\t\t\t j_curANM = AWI_getAccountConfig(\"ACCOUNT_NM\");\r\n");
      out.write("\t\t\t if(j_curANM==\"\") {\r\n");
      out.write("\t\t\t\t $('#btnJoin').show();\r\n");
      out.write("\t\t\t }\r\n");
      out.write("\r\n");
      out.write("\t\t\t if(sRes['result']==\"OK\" && j_curANM!=\"\") {\r\n");
      out.write("\t\t\t\t $('#FingerC').show();\r\n");
      out.write("\t\t\t }\r\n");
      out.write("\t\t}\r\n");
      out.write("    \t// NULL Compare\r\n");
      out.write("\t\tfunction checkNull(string) {\r\n");
      out.write("\t\t\tif (string==null || string=='') {\r\n");
      out.write("\t\t\t\treturn true;\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("    \t// 지문인증 call\r\n");
      out.write("    \tfunction Fingerprint() {\r\n");
      out.write("    \t\t var joCmd = null;\r\n");
      out.write("    \t\t var params = new Object();\r\n");
      out.write("    \t\t params['cmd'] = \"showFingerprint\";\r\n");
      out.write("    \t\t joCmd = {func:params};\r\n");
      out.write("    \t\t\tif(AWI_DEVICE == 'ios') {\r\n");
      out.write("    \t\t\t\tsReturn =  prompt(JSON.stringify(joCmd));\t\r\n");
      out.write("    \t\t\t} else if(AWI_DEVICE == 'android') {\r\n");
      out.write("    \t\t\t\tsReturn =  window.AWI.callAppFunc(JSON.stringify(joCmd));\t\r\n");
      out.write("    \t\t\t} else { // windows\r\n");
      out.write("    \t\t\t\tsReturn =  window.external.CallAppFunc(JSON.stringify(joCmd));\t\r\n");
      out.write("    \t\t\t}\r\n");
      out.write("\t\t\t var sRes = JSON.parse(sReturn);\r\n");
      out.write("    \t}\r\n");
      out.write("    \t\r\n");
      out.write("    \t// 지문인증 콜백\r\n");
      out.write("    \tfunction AWI_CallFromApp(strJson) {\r\n");
      out.write("    \t\tvar joRoot = JSON.parse(strJson);\r\n");
      out.write("    \t\tvar joFunc = joRoot.func;\r\n");
      out.write("    \t\tif(joFunc.cmd == 'fingerprint' && joFunc.result == 'OK') {\r\n");
      out.write("    \t\t\tlocation.href=\"/launcher\";\r\n");
      out.write("    \t\t}\r\n");
      out.write("    \t}\r\n");
      out.write("    \t\r\n");
      out.write("\t    function chkForm() {\r\n");
      out.write("\t    \tvar objForm = document.loginform;\r\n");
      out.write("\t    \t\r\n");
      out.write("\t    \tif (checkNull(objForm.txt_MemName.value)==true) {\r\n");
      out.write("\t    \t\t$.alert(\"");
      if (_jspx_meth_spring_005fmessage_005f0(_jspx_page_context))
        return;
      out.write("\");\r\n");
      out.write("\t\t\t\tobjForm.txt_MemName.value=\"\";\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif (checkNull(objForm.txt_MemPwd.value)==true) {\r\n");
      out.write("\t\t\t\t$.alert(\"");
      if (_jspx_meth_spring_005fmessage_005f1(_jspx_page_context))
        return;
      out.write("\");\r\n");
      out.write("\t\t\t\tobjForm.txt_MemPwd.value=\"\";\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// Name check\r\n");
      out.write("\t\t\tvar sANM = AWI_getAccountConfig(\"ACCOUNT_NM\"); // Account_NAME\t\t\r\n");
      out.write("\t\t\tif(sANM != objForm.txt_MemName.value) {\r\n");
      out.write("\t\t\t\t$.alert(\"");
      if (_jspx_meth_spring_005fmessage_005f2(_jspx_page_context))
        return;
      out.write("\");\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// checkPassword call\r\n");
      out.write("\t\t\tif (AWI_checkPassword(document.getElementById('txt_MemPwd').value) == 'OK') {\t\r\n");
      out.write("\t\t\t\tlocation.href=\"/launcher\";\t\t\t\t\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\talert(\"");
      if (_jspx_meth_spring_005fmessage_005f3(_jspx_page_context))
        return;
      out.write("\");\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// Call loading script when loading time : S\r\n");
      out.write("\t\t$(document).ready(function() {\r\n");
      out.write("\t\t\tvar loading = $('<div id=\"loading\" class=\"loading\"></div><img id=\"loading_img\" alt=\"loading\" src=\"/images/viewLoading.gif\" />').appendTo(document.body).hide();\r\n");
      out.write("\t\t\t$( document ).ajaxStart( function() {\r\n");
      out.write("\t\t\t\tloading.show();\r\n");
      out.write("\t\t\t} );\r\n");
      out.write("\t\t\t$( document ).ajaxStop( function() {\r\n");
      out.write("\t\t\t\tloading.hide();\r\n");
      out.write("\t\t\t} );\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t// Call loading script when loading time : E\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction actionJoin() {\r\n");
      out.write("\t\t\tlocation.href=\"/user/join\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tvar onMenu = false;\r\n");
      out.write("\t\tfunction onMainMenu() {\r\n");
      out.write("\t\t\tonMenu = !onMenu;\r\n");
      out.write("\t\t\tchangeMainMenu(onMenu);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfunction changeMainMenu(chk) {\r\n");
      out.write("\t\t\tonMenu = chk;\r\n");
      out.write("\t\t\tif (chk) {\r\n");
      out.write("\t\t\t\t$('#menu-box').animate({ top : \"50px\" }, 300);\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\t$('#menu-box').animate({ top : \"-300px\" }, 300);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("    </script>\r\n");
      out.write("    \r\n");
      out.write("  \t</head>\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<div id=\"top_header\" style=\"position:absolute;right:0px;top:0;width:100%;height:60px;margin:0;background-color:#fff;z-index:900;border-bottom:1px solid #D0D0D0;\">\r\n");
      out.write("\t\t<div class=\"row\" style=\"margin:0;\">\r\n");
      out.write("\t\t\t<div class=\"col-xs-7 col-sm-7\" style=\"height:40px;\">\r\n");
      out.write("\t\t\t\t<a href=\"/user/login\"><img src=\"/images/nodehome.png\" width=\"138\" height=\"40\" style=\"margin-top:10px;margin-left:5px;\" /></a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"col-xs-5 col-sm-5\" style=\"height:60px;text-align:right;\">\r\n");
      out.write("\t            <div style=\"margin-top:15px;margin-right:7px;font-size:15pt;\">\r\n");
      out.write("\t                <i class=\"fas fa-ellipsis-v\" onclick=\"onMainMenu();\" style=\"color:#127519;\"></i>\r\n");
      out.write("\t            </div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<script>\r\n");
      out.write("\tfunction Fn_openNetOption() {\r\n");
      out.write("\t\t$('#netIdDiv').show();\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction Fn_redirectNetID() {\r\n");
      out.write("\t\tAWI_setNetID($('#netId').val());\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction Fn_openLocation() {\r\n");
      out.write("\t\t$('#locationDiv').show();\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction Fn_actionLocation() {\r\n");
      out.write("\t\tif($('#locationUrl').val()!=\"\") {\r\n");
      out.write("\t\t\tAWI_openAppByHost($('#locationUrl').val());\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("\t<div id=\"menu-box\" style=\"position:absolute;right:0px;top:-300px;width:100%;background-color:#424242;padding:10px;color:#000;z-index:800;\">\r\n");
      out.write("\t\t<li onclick=\"javascript:Fn_openLocation();\" id=\"goHostBtn\" style=\"display:none;\"><i class=\"fas fa-location-arrow\"></i> 호스트가기</li>\r\n");
      out.write("\t\t<li onclick=\"javascript:AWI_callUrl('http://www.nodehome.io/faucet.jsp');\"><i class=\"fas fa-coins\"></i> Faucet</li>\r\n");
      out.write("\t\t<li id=\"netIdBtn\" style=\"display:none;\" onclick=\"javascript:Fn_openNetOption();\"><i class=\"fas fa-network-wired\"></i> 접속네트워크</li>\r\n");
      out.write("\t\t<div id=\"netIdDiv\" style=\"display:none;\"> \r\n");
      out.write("\t\t\t<select name=\"netId\" id=\"netId\" class=\"form-control\" onchange=\"Fn_redirectNetID()\">\r\n");
      out.write("\t\t\t<option value=\"MainNet\">MainNet</option>\r\n");
      out.write("\t\t\t</select>\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<li onclick=\"javascript:AWI_showSettingView();\"><i class=\"fas fa-cog\"></i> 설정</li>\r\n");
      out.write("\t\t<div style=\"position:absolute;right:5px;bottom:-23px;font-size:20pt;background-color:#fff;height:23px;line-height:23px;\"><i style=\"padding:0;margin:0;border:0;height:23px;line-height:23px;color:#414041;\" class=\"fas fa-window-close\" onclick=\"changeMainMenu(false)\"></i></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div id=\"locationDiv\" style=\"display:none;\" class=\"pop-center-260-150\">\r\n");
      out.write("\t\t<div class=\"col-xs-12 col-sm-12\" style=\"height:40px;line-height:40px;margin-top:30px;\">\r\n");
      out.write("\t\t\t<input type=\"text\" name=\"locationUrl\" id=\"locationUrl\" value=\"\" placeholder=\"http://www.sample.com\" class=\"form-control\" />\t\r\n");
      out.write("\t\t</div> \r\n");
      out.write("\t\t<div class=\"col-xs-12 col-sm-12\" style=\"height:60px;padding-top:15px;text-align:left;color:#127519;vertical-align: middle;line-height:60px;\">\r\n");
      out.write("\t\t\t<button type=\"button\" class=\"btn btn-primary col-xs-12\" onclick=\"Fn_actionLocation();\">이동</button>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div style=\"position:absolute;right:5px;top:-1px;font-size:20pt;font-weight:bold;\"><i class=\"fas fa-window-close\" onclick=\"$('#locationDiv').hide();\"></i></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<section style=\"height: 100vh;\">\r\n");
      out.write("    <div style=\"background-attachment: fixed; background-size: cover; width: 100%; height: 100vh; position: relative;\"  >\r\n");
      out.write("    <div class=\"baslik\">\r\n");
      out.write("        <b style=\"font-size: 50px; text-align: center; margin-bottom: -21px; display: block;\">NodeHome</b>\r\n");
      out.write("    </div>\r\n");
      out.write("    <section>\r\n");
      out.write("    <form name=\"loginform\" id=\"loginform\" method=\"post\">\r\n");
      out.write("        <div class=\"arkalogin\">\r\n");
      out.write("            <div class=\"loginbaslik\">Launcher Login</div>\r\n");
      out.write("            <hr style=\"border: 1px solid #ccc;\">\r\n");
      out.write("            <input type=\"text\" class=\"giris\" name=\"txt_MemName\" id=\"txt_MemName\" placeholder=\"Username\" maxlength=\"30\" tabindex=\"1\" />\r\n");
      out.write("            <input type=\"password\" class=\"giris\" name=\"txt_MemPwd\" id=\"txt_MemPwd\" placeholder=\"Password\" maxlength=\"30\" tabindex=\"2\" />\r\n");
      out.write("            <input class=\"butonlogin\" type=\"button\" name=\"\" value=\"Login\" onclick=\"chkForm();\" />\r\n");
      out.write("            <input class=\"butonlogin\" type=\"button\" name=\"\" id=\"FingerC\" value=\"Fingerprint authentication\" onclick=\"Fingerprint();\" style=\"display:none;\"/>\r\n");
      out.write("            <br/><br/>\r\n");
      out.write("\t\t\t<div class=\"row\" id=\"btnJoin\" style=\"display:none;\">\r\n");
      out.write("\t\t\t\t<div class=\"col-xs-12 col-md-12\"><a href=\"javascript:actionJoin();\" class=\"btn btn-danger btn-block btn-lg\">회원가입</a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </form>\r\n");
      out.write("    </section><br>\r\n");
      out.write("    <span style=\"font-size: 23px; text-align: center; display: block; color: #888888;\">Welcome To The User Panel</span>\r\n");
      out.write("    <span style=\"font-size: 24px; text-align: center; display: block; color: #888888; font-weight: bold; margin-bottom: 34px;\">LOGİN</span>\r\n");
      out.write("    </div>\r\n");
      out.write("    </section>\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_spring_005fmessage_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f0 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f0_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f0.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f0.setParent(null);
      // /WEB-INF/jsps/svm/user/login.jsp(121,16) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f0.setCode("user.msg.name");
      int[] _jspx_push_body_count_spring_005fmessage_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f0 = _jspx_th_spring_005fmessage_005f0.doStartTag();
        if (_jspx_th_spring_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f0);
      _jspx_th_spring_005fmessage_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f0, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f1 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f1_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f1.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f1.setParent(null);
      // /WEB-INF/jsps/svm/user/login.jsp(127,13) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f1.setCode("user.msg.password");
      int[] _jspx_push_body_count_spring_005fmessage_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f1 = _jspx_th_spring_005fmessage_005f1.doStartTag();
        if (_jspx_th_spring_005fmessage_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f1);
      _jspx_th_spring_005fmessage_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f1, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f2 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f2_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f2.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f2.setParent(null);
      // /WEB-INF/jsps/svm/user/login.jsp(135,13) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f2.setCode("user.msg.namedifferent");
      int[] _jspx_push_body_count_spring_005fmessage_005f2 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f2 = _jspx_th_spring_005fmessage_005f2.doStartTag();
        if (_jspx_th_spring_005fmessage_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f2[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f2.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f2.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f2);
      _jspx_th_spring_005fmessage_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f2, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f3 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f3_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f3.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f3.setParent(null);
      // /WEB-INF/jsps/svm/user/login.jsp(143,11) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f3.setCode("user.msg.loginfail");
      int[] _jspx_push_body_count_spring_005fmessage_005f3 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f3 = _jspx_th_spring_005fmessage_005f3.doStartTag();
        if (_jspx_th_spring_005fmessage_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f3[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f3.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f3.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f3);
      _jspx_th_spring_005fmessage_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f3, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f3_reused);
    }
    return false;
  }
}
