/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.40
 * Generated at: 2019-04-19 07:50:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsps;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import io.nodehome.svm.common.biz.CoinListVO;
import io.nodehome.svm.common.CoinUtil;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/home/fouri/work/nodehome-project/nodehome-launcher/webapps/ROOT/WEB-INF/lib/spring-webmvc-4.1.2.RELEASE.jar!/META-INF/spring.tld", Long.valueOf(1415631592000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-webmvc-4.1.2.RELEASE.jar", Long.valueOf(1555659349000L));
    _jspx_dependants.put("jar:file:/home/fouri/work/nodehome-project/nodehome-launcher/webapps/ROOT/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1555659349000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("io.nodehome.svm.common.CoinUtil");
    _jspx_imports_classes.add("io.nodehome.svm.common.biz.CoinListVO");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

request.setCharacterEncoding("utf-8");
response.setContentType("text/html; charset=utf-8");

// WID
String strAWID = request.getParameter("wid");
if (strAWID == null) strAWID = "";
System.out.println("wid : "+strAWID);

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("  <head>\r\n");
      out.write("    <title></title>\r\n");
      out.write("    <!-- Required meta tags -->\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta content=\"width=device-width, initial-scale=1.0; maximum-scale=1.0; minimum-scale=1.0; user-scalable=no;\" name=\"viewport\" />\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\r\n");
      out.write("\r\n");
      out.write("    <!--     Fonts and icons     -->\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Roboto+Slab:400,700|Material+Icons\" />\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/latest/css/font-awesome.min.css\" />\r\n");
      out.write("\r\n");
      out.write("    <!-- Material Dashboard CSS -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/bootstrap/assets/css/material-dashboard.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.4.2/css/all.css\" integrity=\"sha384-/rXc/GQVaYpyDdyxK+ecHPVYJSN9bmVFBvjA/9eOB+pb3F2w2N6fc5qB9Ew5yIns\" crossorigin=\"anonymous\">\r\n");
      out.write("    \r\n");
      out.write("    <!-- CSS Just for demo purpose, don't include it in your project -->\r\n");
      out.write("    <link href=\"/bootstrap/assets/demo/demo.css\" rel=\"stylesheet\" />\r\n");
      out.write("    \r\n");
      out.write("    <!-- Platform JS -->    \r\n");
      out.write("    <script src=\"/js/loader.js\"></script>\r\n");
      out.write("    <script src=\"/js/common.js\"></script>\r\n");
      out.write("    <script src=\"/js/tapp_interface.js\"></script>\r\n");
      out.write("    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"/css/jquery-confirm.min.css\">\r\n");
      out.write("\t<script src=\"/js/jquery-confirm.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("    \t//window.locale = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.locale}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("  \t\t$.ajaxSetup({ async:false }); // AJAX calls in order\r\n");
      out.write("  \t\r\n");
      out.write("\t\t// Script to run as soon as loaded from the web\r\n");
      out.write("\t\t$(function() {\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tvar j_curANM = \"\";\r\n");
      out.write("\t\tvar j_curWID = \"\";\r\n");
      out.write("\t\tvar j_curWNM = \"\"; // Default Wallet ID selected\r\n");
      out.write("\r\n");
      out.write("\t\t// Function to call as soon as it is loaded from the App\r\n");
      out.write("\t\tfunction AWI_OnLoadFromApp(dtype) {\r\n");
      out.write("\t\t\t // Activate AWI_XXX method\r\n");
      out.write("\t\t\t AWI_ENABLE = true;\r\n");
      out.write("\t\t\t AWI_DEVICE = dtype;\r\n");
      out.write("\r\n");
      out.write("\t\t\t j_curANM = AWI_getAccountConfig(\"ACCOUNT_NM\");\r\n");
      out.write("\t\t\t j_curWID = AWI_getAccountConfig(\"CUR_WID\");\r\n");
      out.write("\t\t\t j_curWNM = AWI_getAccountConfig(j_curWID);\r\n");
      out.write("\t\t\t \r\n");
      out.write("\t\t\t if(j_curWID==\"\") {\r\n");
      out.write("\t\t\t\t location.href=\"/svm/wallet/myWalletList\";\r\n");
      out.write("\t\t\t } else {\r\n");
      out.write("\t\t\t\t $('#my_name').html(j_curANM);\r\n");
      out.write("\t\t\t\t $('#my_wallet_name').html(j_curWNM);\r\n");
      out.write("\t\t\t\t var myBalance = getBalance(j_curWID);\r\n");
      out.write("\t\t\t\t var dBalance = (parseInt(myBalance)/");
      out.print(CoinUtil.DISPLAY_COIN_UNIT);
      out.write(");\r\n");
      out.write("\t\t\t\t $('#my_wallet_balance').html(gfnAddComma(dBalance) + \" ");
      out.print(CoinListVO.getCoinCou());
      out.write("\");\r\n");
      out.write("\t\t\t }\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tfunction getBalance(pWalletId) {\r\n");
      out.write("\t\t\tvar sNonce = \"\";\t// nonce string\r\n");
      out.write("\t\t\tvar sSig = \"\";\t\t// signature string\r\n");
      out.write("\t\t\tvar sNpid = \"\";\t\t// NA connect id\r\n");
      out.write("\t\t\tvar rtnBalance = 0;\t// Balance\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// ************ step1 : get Nonce / SVM API\r\n");
      out.write("\t\t\tvar sQuery = {\"pid\":\"PID\", \"ver\":\"10000\", \"nType\":\"query\"};\r\n");
      out.write("\t\t\tvar retData = WSI_callJsonAPI(\"/svm/common/getNonce\", sQuery);\r\n");
      out.write("\t\t\tif(retData['result'] == \"OK\") {\r\n");
      out.write("\t\t\t\tsNonce = retData['nonce'];\r\n");
      out.write("\t\t\t\tsNpid = retData['npid'];\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// ************ step2 : get Signature / S-T API\r\n");
      out.write("\t\t\tsQuery = [\"PID\",\"10000\",sNonce];\r\n");
      out.write("\t\t\tvar sigRes = AWI_getSignature(pWalletId, sQuery, \"query\", \"getBalance\");\r\n");
      out.write("\t\t\tif(sigRes['result']==\"OK\") {\r\n");
      out.write("\t\t\t\tsSig = sigRes['signature_key'];\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t// ************ step3 : get Balance / SVM API\r\n");
      out.write("\t\t\t\tsQuery = {\"npid\":sNpid, \"parameterArgs\" : [\"PID\",\"10000\",sNonce,sSig,pWalletId]};\r\n");
      out.write("\t\t\t\tretData = WSI_callJsonAPI(\"/svm/wallet/getBalance\", sQuery);\r\n");
      out.write("\t\t\t\tif(retData['result'] == \"OK\") {\r\n");
      out.write("\t\t\t\t\trtnBalance = retData['balance'];\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\treturn '';\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\treturn rtnBalance;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// Wallet chain registration\r\n");
      out.write("\t    function setWalletInfo() {\t    \t\r\n");
      out.write("\t\t\tvar result = confirm ('");
      if (_jspx_meth_spring_005fmessage_005f0(_jspx_page_context))
        return;
      out.write("');\r\n");
      out.write("\t\t\tif (result) {\r\n");
      out.write("\t\t\t\tvar sWNM = j_curWNM;\r\n");
      out.write("\t\t\t\tvar pWalletId = j_curWID;\r\n");
      out.write("\t\t\t\tvar sNonce = \"\";\t// nonce string\r\n");
      out.write("\t\t\t\tvar sSig = \"\";\t\t// signature string\r\n");
      out.write("\t\t\t\tvar sNpid = \"\";\t\t// NA connect id\r\n");
      out.write("\t\t\t\tvar rtnBalance = 0;\t// Balance\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t// ************ step1 : get Nonce / SVM API\r\n");
      out.write("\t\t\t\tvar sQuery = {\"pid\":\"PID\", \"ver\":\"10000\", \"nType\":\"query\"};\r\n");
      out.write("\t\t\t\tvar retData = WSI_callJsonAPI(\"/svm/common/getNonce\", sQuery);\r\n");
      out.write("\t\t\t\tif(retData['result'] == \"OK\") {\r\n");
      out.write("\t\t\t\t\tsNonce = retData['nonce'];\r\n");
      out.write("\t\t\t\t\tsNpid = retData['npid'];\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t// ************ step2 : get Signature / S-T API\r\n");
      out.write("\t\t\t\tsQuery = [\"PID\",\"10000\",sNonce];\r\n");
      out.write("\t\t\t\tvar sigRes = AWI_getSignature(pWalletId, sQuery, \"invoke\", \"setWalletInfo\");\r\n");
      out.write("\t\t\t\tif(sigRes['result']==\"OK\") {\r\n");
      out.write("\t\t\t\t\tsSig = sigRes['signature_key'];\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t// ************ step3 : setWalletInfo / SVM API\r\n");
      out.write("\t\t\t\t\tsQuery = {\"npid\":sNpid, \"parameterArgs\" : [\"PID\",\"10000\",sWNM,\"100000000000\",\"wallet memo\",sNonce,sSig,pWalletId]};\r\n");
      out.write("\t\t\t\t\tretData = WSI_callJsonAPI(\"/svm/wallet/setWalletInfo\", sQuery);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tif(retData['result'] == \"OK\") {\r\n");
      out.write("\t\t\t\t\t\t//rtnBalance = retData['balance'];\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\treturn '';\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\treturn rtnBalance;\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t}\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t    // backup\r\n");
      out.write("\t    function setBackUpFunc() {\r\n");
      out.write("\t\t\tvar pWalletId = j_curWID;\t\t\t\r\n");
      out.write("\t\t\tsReturn = AWI_setBackup(pWalletId);\r\n");
      out.write("\t\t\t/* var joReturn = JSON.parse(sReturn);\r\n");
      out.write("\t\t\tif (joReturn['result'] == 'OK') {\r\n");
      out.write("\t\t\t} */\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t    \r\n");
      out.write("\t    // restore\r\n");
      out.write("\t    function setRestoreFunc() {\r\n");
      out.write("\t\t\tsReturn = AWI_setRestore();\r\n");
      out.write("\t\t\t/* var joReturn = JSON.parse(sReturn);\r\n");
      out.write("\t\t\tif (joReturn['result'] == 'OK') {\r\n");
      out.write("\t\t\t} */\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t    \r\n");
      out.write("\t \t// showQRCode\r\n");
      out.write("\t    function showQRCode() {\r\n");
      out.write("\t    \tvar pWalletId = j_curWID;\r\n");
      out.write("\t    \tvar pWalletName = j_curWNM;\r\n");
      out.write("\t    \tAWI_showQRCode(pWalletId, pWalletName);\r\n");
      out.write("\t    \t/* var joReturn = JSON.parse(sReturn);\r\n");
      out.write("\t\t\tif (joReturn['result'] == 'OK') {\r\n");
      out.write("\t\t\t} */\r\n");
      out.write("\t\t}\r\n");
      out.write("\t    \r\n");
      out.write("\t \t// App To Web\r\n");
      out.write("\t    function AWI_CallFromApp(strJson) {\r\n");
      out.write("\t    \tvar joRoot = JSON.parse(strJson);  \r\n");
      out.write("\t    \tvar joFunc = joRoot.func;\r\n");
      out.write("    \t\tif(joFunc.cmd == 'backup') {\r\n");
      out.write("    \t\t\t// '{ \"func\" : { \"cmd\" : \"backup\", \"result\" : \"OK\", \"walletId\" : \"Wallet Id\" }}'\r\n");
      out.write("        \t\t//alert(\"backup complete\");\r\n");
      out.write("    \t\t\t//location.reload();\r\n");
      out.write("\t    \t}\r\n");
      out.write("    \t\t\r\n");
      out.write("    \t\tif(joFunc.cmd == 'restore') {\r\n");
      out.write("    \t\t\t// '{ \"func\" : { \"cmd\" : \"restore\", \"result\" : \"OK\", \"walletId\" : \"Wallet Id\" }}'\r\n");
      out.write("    \t\t\tif (joFunc.result == 'OK') {\r\n");
      out.write("\t    \t\t\tvar pWalletId = joFunc.walletId;\r\n");
      out.write("\t        \t\tAWI_setAccountConfig(\"CUR_WID\",pWalletId);\r\n");
      out.write("\t        \t\tlocation.href=\"/svm/wallet/createWalletRestore?wid=\"+pWalletId;\r\n");
      out.write("\t    \t\t\t//location.href=\"/index?wid=\"+pWalletId;\r\n");
      out.write("        \t\t}\r\n");
      out.write("\t    \t}\r\n");
      out.write("\t    }\r\n");
      out.write("\r\n");
      out.write("\t\t// Create Wallet\r\n");
      out.write("\t    function createWallet() {\r\n");
      out.write("\t    \tlocation.href=\"/svm/wallet/createWalletForm\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t    \r\n");
      out.write("\t\t// My Wallet List\r\n");
      out.write("\t    function myWalletList() {\r\n");
      out.write("\t    \tlocation.href=\"/svm/wallet/myWalletList\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t// remittance\r\n");
      out.write("\t    function sendCoin() {\r\n");
      out.write("\t    \tlocation.href=\"/svm/wallet/sendCoinForm\";\r\n");
      out.write("\t\t}\t\r\n");
      out.write("\r\n");
      out.write("\t\t// Transaction history\r\n");
      out.write("\t    function myTransHistory() {\r\n");
      out.write("\t    \tlocation.href=\"/svm/wallet/myTransHistory\";\r\n");
      out.write("\t\t}\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// Add new service\r\n");
      out.write("\t    function fnAddService() {\r\n");
      out.write("\t    \tlocation.href=\"/svm/service/addServiceForm\";\r\n");
      out.write("\t\t}\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t    function fnLogout() {\r\n");
      out.write("\t    \tAWI_logout();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t    \r\n");
      out.write("\t</script>\r\n");
      out.write("  </head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("    \r\n");
      out.write("    <style>\r\n");
      out.write("\t#menu-box li {\r\n");
      out.write("\t\tlist-style:none;\r\n");
      out.write("\t\theight:50px;\r\n");
      out.write("\t\tline-height:50px;\r\n");
      out.write("\t\tborder-bottom:1px solid #646464;\r\n");
      out.write("\t}\r\n");
      out.write("\t#menu-box li a {\r\n");
      out.write("\t\tfont-size:12pt; \r\n");
      out.write("\t\tcolor:#fff; \r\n");
      out.write("\t}\r\n");
      out.write("\t#menu-box li a i {\r\n");
      out.write("\t\tbackground:#fff;\r\n");
      out.write("\t\tpadding:6px;\r\n");
      out.write("\t\tcolor:#424242;\r\n");
      out.write("\t\tborder-radius:50%;\r\n");
      out.write("\t\twidth:30px;\r\n");
      out.write("\t\theight:30px;\r\n");
      out.write("\t\tmargin-right:15px;\r\n");
      out.write("\t}\r\n");
      out.write("    </style>\r\n");
      out.write("\t<script>\r\n");
      out.write("\tvar onMenu = false;\r\n");
      out.write("\tfunction onMainMenu() {\r\n");
      out.write("\t\tonMenu = !onMenu;\r\n");
      out.write("\t\tchangeMainMenu(onMenu);\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction changeMainMenu(chk) {\r\n");
      out.write("\t\tonMenu = chk;\r\n");
      out.write("\t\tif (chk) {\r\n");
      out.write("\t\t\t$('#menu-box').animate({ left : \"0px\" }, 300);\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\t$('#menu-box').animate({ left : \"2000px\" }, 300);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("\t<div id=\"top_header\" style=\"width:100%;height:60px;margin:0;background-color:#fff;border-bottom:1px solid #D0D0D0;z-index:900;\">\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<div class=\"col-lg-8 col-md-8 col-sm-8 col-8\" style=\"height:60px;line-height:60px;text-align:left;font-weight:bold;\">\r\n");
      out.write("\t            <a href=\"/index\" style=\"padding-left:20px;color:#171E5E;\">NODEHOME</a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"col-lg-4 col-md-4 col-sm-4 col-4\" style=\"height:60px;text-align:right;\">\r\n");
      out.write("\t            <div style=\"margin-top:15px;margin-right:27px;font-size:15pt;\">\r\n");
      out.write("\t                <i class=\"fas fa-ellipsis-v\" onclick=\"onMainMenu();\" style=\"color:#171E5E;\"></i>\r\n");
      out.write("\t            </div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div id=\"menu-box\" style=\"position:absolute;left:2000px;top:61px;width:100%;background-color:#424242;padding:10px;color:#000;z-index:800;\">\r\n");
      out.write("\t\t<li><a href=\"javascript:fnLogout();\"><i class=\"fas fa-coins\"></i> 로그아웃</a></li>\r\n");
      out.write("\t\t<li><a href=\"/launcher\"><i class=\"fas fa-coins\"></i> 서비스 종료</a></li>\r\n");
      out.write("\t\t<div style=\"position:absolute;right:5px;bottom:-23px;font-size:20pt;background-color:#fff;height:23px;line-height:23px;\"><i style=\"padding:0;margin:0;border:0;height:23px;line-height:23px;color:#414041;\" class=\"fas fa-window-close\" onclick=\"changeMainMenu(false)\"></i></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("  <!-- Content : S -->\r\n");
      out.write("  <div class=\"\">     \r\n");
      out.write("    <div class=\"content\">\r\n");
      out.write("      <div class=\"container-fluid\">          \r\n");
      out.write("          <div class=\"row\" style=\"margin-top:30px;\">\r\n");
      out.write("            <div class=\"col-md-12\">\r\n");
      out.write("              <div class=\"card card-profile\">\r\n");
      out.write("                <div class=\"card-avatar\" style=\"width: 130px; height: 130px; background-color: #2c3e50; padding-top: 50px; font-size: 30px; color: #ffffff; font-weight: bold;\">\r\n");
      out.write("                  <span id=\"my_name\"></span>\r\n");
      out.write("                  <a href=\"#pablo\">\r\n");
      out.write("                    <!-- <img class=\"img\" src=\"/bootstrap/assets/img/faces/profile.png\" /> -->            \r\n");
      out.write("                  </a>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div>\r\n");
      out.write("                  <!-- <h6 class=\"card-category text-gray\"><span id=\"my_name\"></span></h6> -->\r\n");
      out.write("                  <h5 class=\"card-title\">\r\n");
      out.write("                  ");
      if (_jspx_meth_spring_005fmessage_005f1(_jspx_page_context))
        return;
      out.write(" : <span id=\"my_wallet_name\"></span><br />\r\n");
      out.write("                  ");
      if (_jspx_meth_spring_005fmessage_005f2(_jspx_page_context))
        return;
      out.write(" : <span id=\"my_wallet_balance\"></span><br />\r\n");
      out.write("                  <button type=\"button\" class=\"btn btn-primary btn-sm\" onclick=\"javascript:showQRCode();\">");
      if (_jspx_meth_spring_005fmessage_005f3(_jspx_page_context))
        return;
      out.write("</button>\r\n");
      out.write("                  <!-- <button type=\"button\" class=\"btn btn-primary btn-sm\" onclick=\"javascript:setWalletInfo();\">");
      if (_jspx_meth_spring_005fmessage_005f4(_jspx_page_context))
        return;
      out.write("</button> -->\r\n");
      out.write("                  <button type=\"button\" class=\"btn btn-primary btn-sm\" onclick=\"javascript:setBackUpFunc();\">");
      if (_jspx_meth_spring_005fmessage_005f5(_jspx_page_context))
        return;
      out.write("</button>\r\n");
      out.write("                  <button type=\"button\" class=\"btn btn-primary btn-sm\" onclick=\"javascript:setRestoreFunc();\">");
      if (_jspx_meth_spring_005fmessage_005f6(_jspx_page_context))
        return;
      out.write("</button>\r\n");
      out.write("                  </h4>\r\n");
      out.write("                  <!-- <p class=\"card-description\">\r\n");
      out.write("                   \tContents\r\n");
      out.write("                  </p>  -->\r\n");
      out.write("                </div>\r\n");
      out.write("              </div>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("          \r\n");
      out.write("          <div class=\"row\">            \r\n");
      out.write("            <div class=\"col-lg-6 col-md-6 col-sm-6 col-6\">\r\n");
      out.write("              <div class=\"card card-stats\" onclick=\"createWallet();\">\r\n");
      out.write("                <div class=\"card-header card-header-success card-header-icon\">\r\n");
      out.write("                  <div class=\"card-icon\">\r\n");
      out.write("                    <i class=\"material-icons\">&#xE02E;</i> <!-- library_add -->\r\n");
      out.write("                  </div>\r\n");
      out.write("                  <!-- <p class=\"card-category\">");
      if (_jspx_meth_spring_005fmessage_005f7(_jspx_page_context))
        return;
      out.write("</p>\r\n");
      out.write("                  <h3 class=\"card-title\">49/50\r\n");
      out.write("                    <small>GB</small>\r\n");
      out.write("                  </h3> -->\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"card-footer\">\r\n");
      out.write("                  <div class=\"stats\">\r\n");
      out.write("                   \t<i class=\"material-icons\">&#xE02E;</i> ");
      if (_jspx_meth_spring_005fmessage_005f8(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                  </div>\r\n");
      out.write("                </div>\r\n");
      out.write("              </div>\r\n");
      out.write("            </div>            \r\n");
      out.write("            <div class=\"col-lg-6 col-md-6 col-sm-6 col-6\">\r\n");
      out.write("              <div class=\"card card-stats\" onclick=\"myWalletList();\">\r\n");
      out.write("                <div class=\"card-header card-header-warning card-header-icon\">\r\n");
      out.write("                  <div class=\"card-icon\">\r\n");
      out.write("                    <i class=\"material-icons\">&#xE850;</i> <!-- account_balance_wallet -->\r\n");
      out.write("                  </div>\r\n");
      out.write("                  <!-- <p class=\"card-category\">");
      if (_jspx_meth_spring_005fmessage_005f9(_jspx_page_context))
        return;
      out.write("</p>\r\n");
      out.write("                  <h3 class=\"card-title\">49/50\r\n");
      out.write("                    <small>GB</small>\r\n");
      out.write("                  </h3> -->\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"card-footer\">\r\n");
      out.write("                  <div class=\"stats\">\r\n");
      out.write("                    <i class=\"material-icons\">&#xE850;</i> ");
      if (_jspx_meth_spring_005fmessage_005f10(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                  </div>\r\n");
      out.write("                </div>\r\n");
      out.write("              </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"col-lg-6 col-md-6 col-sm-6 col-6\">\r\n");
      out.write("              <div class=\"card card-stats\" onclick=\"sendCoin();\">\r\n");
      out.write("                <div class=\"card-header card-header-danger card-header-icon\">\r\n");
      out.write("                  <div class=\"card-icon\">\r\n");
      out.write("                    <i class=\"material-icons\">&#xE263;</i> <!-- monetization_on -->\r\n");
      out.write("                  </div>\r\n");
      out.write("                  <!-- <p class=\"card-category\">");
      if (_jspx_meth_spring_005fmessage_005f11(_jspx_page_context))
        return;
      out.write("</p>\r\n");
      out.write("                  <h3 class=\"card-title\">49/50\r\n");
      out.write("                    <small>GB</small>\r\n");
      out.write("                  </h3> -->\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"card-footer\">\r\n");
      out.write("                  <div class=\"stats\">\r\n");
      out.write("                    <i class=\"material-icons\">&#xE263;</i> ");
      if (_jspx_meth_spring_005fmessage_005f12(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                  </div>\r\n");
      out.write("                </div>\r\n");
      out.write("              </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"col-lg-6 col-md-6 col-sm-6 col-6\">\r\n");
      out.write("              <div class=\"card card-stats\" onclick=\"myTransHistory();\">\r\n");
      out.write("                <div class=\"card-header card-header-info card-header-icon\">\r\n");
      out.write("                  <div class=\"card-icon\">\r\n");
      out.write("                    <i class=\"material-icons\">&#xE889;</i> <!-- history -->\r\n");
      out.write("                  </div>\r\n");
      out.write("                  <!-- <p class=\"card-category\">");
      if (_jspx_meth_spring_005fmessage_005f13(_jspx_page_context))
        return;
      out.write("</p>\r\n");
      out.write("                  <h3 class=\"card-title\">49/50\r\n");
      out.write("                    <small>GB</small>\r\n");
      out.write("                  </h3> -->\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"card-footer\">\r\n");
      out.write("                  <div class=\"stats\">\r\n");
      out.write("                    <i class=\"material-icons\">&#xE889;</i> ");
      if (_jspx_meth_spring_005fmessage_005f14(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                  </div>\r\n");
      out.write("                </div>\r\n");
      out.write("              </div>\r\n");
      out.write("            </div>            \r\n");
      out.write("          </div>\r\n");
      out.write("          \r\n");
      out.write("          \r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("  <!-- Content : E -->\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("    <!--   Core JS Files   -->    \r\n");
      out.write("    <script src=\"/bootstrap/assets/js/core/jquery.min.js\"></script>\r\n");
      out.write("    <script src=\"/bootstrap/assets/js/core/popper.min.js\"></script>\r\n");
      out.write("    <script src=\"/bootstrap/assets/js/bootstrap-material-design.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <!--  Notifications Plugin, full documentation here: http://bootstrap-notify.remabledesigns.com/    -->\r\n");
      out.write("    <script src=\"/bootstrap/assets/js/plugins/bootstrap-notify.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <!--  Charts Plugin, full documentation here: https://gionkunz.github.io/chartist-js/ -->\r\n");
      out.write("    <script src=\"/bootstrap/assets/js/core/chartist.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <!-- Plugin for Scrollbar documentation here: https://github.com/utatti/perfect-scrollbar -->\r\n");
      out.write("    <script src=\"/bootstrap/assets/js/plugins/perfect-scrollbar.jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <!-- Demo init -->\r\n");
      out.write("    <script src=\"/bootstrap/assets/js/plugins/demo.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <!-- Material Dashboard Core initialisations of plugins and Bootstrap Material Design Library -->\r\n");
      out.write("    <script src=\"/bootstrap/assets/js/material-dashboard.js?v=2.1.0\"></script>\r\n");
      out.write("  \r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_spring_005fmessage_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f0 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f0_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f0.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f0.setParent(null);
      // /WEB-INF/jsps/index.jsp(114,26) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f0.setCode("wallet.msg.addchain");
      int[] _jspx_push_body_count_spring_005fmessage_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f0 = _jspx_th_spring_005fmessage_005f0.doStartTag();
        if (_jspx_th_spring_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f0);
      _jspx_th_spring_005fmessage_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f0, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f1 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f1_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f1.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f1.setParent(null);
      // /WEB-INF/jsps/index.jsp(307,18) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f1.setCode("wallet.text.walletname");
      int[] _jspx_push_body_count_spring_005fmessage_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f1 = _jspx_th_spring_005fmessage_005f1.doStartTag();
        if (_jspx_th_spring_005fmessage_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f1);
      _jspx_th_spring_005fmessage_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f1, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f2 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f2_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f2.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f2.setParent(null);
      // /WEB-INF/jsps/index.jsp(308,18) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f2.setCode("wallet.text.balance");
      int[] _jspx_push_body_count_spring_005fmessage_005f2 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f2 = _jspx_th_spring_005fmessage_005f2.doStartTag();
        if (_jspx_th_spring_005fmessage_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f2[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f2.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f2.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f2);
      _jspx_th_spring_005fmessage_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f2, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f3 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f3_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f3.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f3.setParent(null);
      // /WEB-INF/jsps/index.jsp(309,106) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f3.setCode("user.text.qrzoom");
      int[] _jspx_push_body_count_spring_005fmessage_005f3 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f3 = _jspx_th_spring_005fmessage_005f3.doStartTag();
        if (_jspx_th_spring_005fmessage_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f3[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f3.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f3.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f3);
      _jspx_th_spring_005fmessage_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f3, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f4 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f4_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f4.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f4.setParent(null);
      // /WEB-INF/jsps/index.jsp(310,114) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f4.setCode("user.button.addWallet");
      int[] _jspx_push_body_count_spring_005fmessage_005f4 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f4 = _jspx_th_spring_005fmessage_005f4.doStartTag();
        if (_jspx_th_spring_005fmessage_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f4[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f4.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f4.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f4);
      _jspx_th_spring_005fmessage_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f4, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f5(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f5 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f5_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f5.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f5.setParent(null);
      // /WEB-INF/jsps/index.jsp(311,109) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f5.setCode("user.text.backup");
      int[] _jspx_push_body_count_spring_005fmessage_005f5 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f5 = _jspx_th_spring_005fmessage_005f5.doStartTag();
        if (_jspx_th_spring_005fmessage_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f5[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f5.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f5.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f5);
      _jspx_th_spring_005fmessage_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f5, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f5_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f6(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f6 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f6_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f6.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f6.setParent(null);
      // /WEB-INF/jsps/index.jsp(312,110) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f6.setCode("user.text.restore");
      int[] _jspx_push_body_count_spring_005fmessage_005f6 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f6 = _jspx_th_spring_005fmessage_005f6.doStartTag();
        if (_jspx_th_spring_005fmessage_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f6[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f6.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f6.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f6);
      _jspx_th_spring_005fmessage_005f6_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f6, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f6_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f7(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f7 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f7_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f7.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f7.setParent(null);
      // /WEB-INF/jsps/index.jsp(329,48) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f7.setCode("user.button.createWallet");
      int[] _jspx_push_body_count_spring_005fmessage_005f7 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f7 = _jspx_th_spring_005fmessage_005f7.doStartTag();
        if (_jspx_th_spring_005fmessage_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f7[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f7.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f7.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f7);
      _jspx_th_spring_005fmessage_005f7_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f7, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f7_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f8(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f8 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f8_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f8.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f8.setParent(null);
      // /WEB-INF/jsps/index.jsp(336,59) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f8.setCode("user.button.createWallet");
      int[] _jspx_push_body_count_spring_005fmessage_005f8 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f8 = _jspx_th_spring_005fmessage_005f8.doStartTag();
        if (_jspx_th_spring_005fmessage_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f8[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f8.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f8.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f8);
      _jspx_th_spring_005fmessage_005f8_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f8, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f8_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f9(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f9 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f9_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f9.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f9.setParent(null);
      // /WEB-INF/jsps/index.jsp(347,48) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f9.setCode("user.button.selectWallet");
      int[] _jspx_push_body_count_spring_005fmessage_005f9 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f9 = _jspx_th_spring_005fmessage_005f9.doStartTag();
        if (_jspx_th_spring_005fmessage_005f9.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f9[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f9.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f9.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f9);
      _jspx_th_spring_005fmessage_005f9_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f9, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f9_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f10(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f10 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f10_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f10.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f10.setParent(null);
      // /WEB-INF/jsps/index.jsp(354,59) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f10.setCode("user.button.selectWallet");
      int[] _jspx_push_body_count_spring_005fmessage_005f10 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f10 = _jspx_th_spring_005fmessage_005f10.doStartTag();
        if (_jspx_th_spring_005fmessage_005f10.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f10[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f10.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f10.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f10);
      _jspx_th_spring_005fmessage_005f10_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f10, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f10_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f11(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f11 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f11_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f11.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f11.setParent(null);
      // /WEB-INF/jsps/index.jsp(365,48) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f11.setCode("user.button.sendCoin");
      int[] _jspx_push_body_count_spring_005fmessage_005f11 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f11 = _jspx_th_spring_005fmessage_005f11.doStartTag();
        if (_jspx_th_spring_005fmessage_005f11.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f11[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f11.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f11.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f11);
      _jspx_th_spring_005fmessage_005f11_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f11, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f11_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f12(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f12 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f12_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f12.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f12.setParent(null);
      // /WEB-INF/jsps/index.jsp(372,59) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f12.setCode("user.button.sendCoin");
      int[] _jspx_push_body_count_spring_005fmessage_005f12 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f12 = _jspx_th_spring_005fmessage_005f12.doStartTag();
        if (_jspx_th_spring_005fmessage_005f12.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f12[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f12.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f12.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f12);
      _jspx_th_spring_005fmessage_005f12_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f12, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f12_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f13(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f13 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f13_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f13.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f13.setParent(null);
      // /WEB-INF/jsps/index.jsp(383,48) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f13.setCode("user.button.transHistory");
      int[] _jspx_push_body_count_spring_005fmessage_005f13 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f13 = _jspx_th_spring_005fmessage_005f13.doStartTag();
        if (_jspx_th_spring_005fmessage_005f13.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f13[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f13.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f13.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f13);
      _jspx_th_spring_005fmessage_005f13_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f13, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f13_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f14(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f14 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f14_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f14.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f14.setParent(null);
      // /WEB-INF/jsps/index.jsp(390,59) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f14.setCode("user.button.transHistory");
      int[] _jspx_push_body_count_spring_005fmessage_005f14 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f14 = _jspx_th_spring_005fmessage_005f14.doStartTag();
        if (_jspx_th_spring_005fmessage_005f14.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f14[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f14.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f14.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f14);
      _jspx_th_spring_005fmessage_005f14_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f14, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f14_reused);
    }
    return false;
  }
}
